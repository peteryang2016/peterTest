interface DBI<T>{
    add(info:T):boolean;
    update(info:T,id:number):boolean;
    delete(id:number):boolean;
    get(id:number):any[]
}
//定义一个操作mysql数据库的类   注意：要实现泛型接口，这个类也应该是一个泛型类
class MysqlDB<T> implements DBI<T>{
    add(info: T): boolean {
        throw new Error("Method not implemented.");
    }    
    update(info: T, id: number): boolean {
        throw new Error("Method not implemented.");
    }
    delete(id: number): boolean {
        throw new Error("Method not implemented.");
    }
    get(id: number): any[] {
        throw new Error("Method not implemented.");
    }
}
//定义一个操作mssql数据库的类
class MssqlDB<T> implements DBI<T>{
    add(info: T): boolean {
        console.log(info)
        return true
    }    
    update(info: T, id: number): boolean {
        throw new Error("Method not implemented.");
    }
    delete(id: number): boolean {
        throw new Error("Method not implemented.");
    }
    get(id: number): any[] {
        throw new Error("Method not implemented.");
    }
}

//操作用户表，定义一个user类和数据表做映射
class User{
    username:string|undefined;
    password:string|undefined;
}
let u = new User()
u.username = 'peter'
u.password = '123456'
let oMysql = new MssqlDB<User>()
oMysql.add(u)